#ifndef __SAFEROPEMACHINE_H_
#define __SAFEROPEMACHINE_H_

/*
 safe rope 
 */
typedef enum _SafeMachineStatus {
	SAFE_MACHINE_STATUS_INIT,
	SAFE_MACHINE_STATUS_LOCKLOW,
	SAFE_MACHINE_STATUS_UNLOCKLOW,
	SAFE_MACHINE_STATUS_LOCKHIGH,
	SAFE_MACHINE_STATUS_UNLOCKHIGH,
} SafemachineStatus;

typedef enum _SafeMachineEvent {
	SAFE_MACHINE_EVENT_LOCKED, 
	SAFE_MACHINE_EVENT_UNLOCKED,
	SAFE_MACHINE_EVENT_TOHIGH,
	SAFE_MACHINE_EVENT_TOLOW,
	SAFE_MACHINE_EVENT_KEYPRESSED,
	SAFE_MACHINE_EVENT_REQUESTUNLOCK,
	SAFE_MACHINE_EVENT_REQUESTRESETH0,		//send nb package to request reset h0
	SAFE_MACHINE_EVENT_NBREQUESTRESETH0,  //receive nb package to request reset h0
	SAFE_MACHINE_EVENT_DROP,
	SAFE_MACHINE_EVENT_VIBRATE,

} SafeMachineEvent;

#define SAFEMACHINE_NB_UPLINK_LOCKSTATUS_CMD 'L'
#define SAFEMACHINE_NB_UPLINK_LOCKSTATUS_VALUE_LOCKED '1'
#define SAFEMACHINE_NB_UPLINK_LOCKSTATUS_VALUE_UNLOCKED '0'

#define SAFEMACHINE_NB_UPLINK_WARNING_CMD 'W'
#define SAFEMACHINE_NB_UPLINK_WARNING_VALUE_DROP  '1'
#define SAFEMACHINE_NB_UPLINK_WARNING_VALUE_NO_WORKING '2'
#define SAFEMACHINE_NB_UPLINK_WARNING_VALUE_UNLOCK_INAIR '3'

#define SAFEMACHINE_NB_UPLINK_REQUEST_CMD 'R'
#define SAFEMACHINE_NB_UPLINK_REQUEST_UNLOCK '1'
#define SAFEMACHINE_NB_UPLINK_REQUEST_RESETH0 '2'

#define SAFEMACHINE_NB_DOWNLINK_LOCK_CMD 'O'
#define SAFEMACHINE_NB_DOWNLINK_LOCK_VALUE_UNLOCK '0'

#define SAFEMACHINE_NB_DOWNLINK_REQUEST_RESETH0_CMD 'A'
#define SAFEMACHINE_NB_DOWNLINK_REQUEST_VALUE_RESETH0 '1'
#endif

